c
json['conversation']['messages'].first['text']c
json['conversation']['messages'].first['text']
json['conversation']['messages']['id']
json['conversation']['messages']
json['conversation']
json[:conversation]
json.class
json
c
!((sender.employer? && recipient.employee?) || (sender.employee? && recipient.employer?)) &&  (sender.id != recipient.id)
!((sender.employer? && recipient.employee?) || (sender.employee? && recipient.employer?)) &&
(sender.id != recipient.id)
recipient.id
sender.id
c
response.body
c
conversation.errors.messages
conversation.errors
c
conversation.errors
c
conversation.errors
conversation
c
user = User.all.size
user = User.size
user = User.first
user = user.first
user = user.forst
c
conversation.empty?
conversation.empty ?
conversation.empty 
conversation.emplty 
conversation
c
attributes_for(:message, :message_from_employer)
c
conversation.users.size
conversation.users.sie
conversation.users
conversation.users.pluck(:sender_id, :recipient_id)
c
ids
n
@user.id
c
@user.id
ids = @record.pluck(:sender_id, :recipient_id).flatten
c
json
c
3/2
1/2
@record.size/2
@record.size
@record.pluck(:sender_id, :recipient_id).flatten.count(@user.id)
@record.pluck(:sender_id, :recipient_id).flatten.count(@user.id) == @record.size/2
   4:       .flatten.count(@user.id) == @record.size/2
@record.pluck(:sender_id, :recipient_id)
c
C
@record.pluck(:sender_id, :recipient_id).flattenC
@record
c
current_userc
current_user
context
c
@record.pluck(:sender_id, :recipient_id).flatten
@record.pluck(:sender_id, :recipient_id).compact
@record.pluck(:sender_id, :recipient_id)
@record.size
@record
c
@record
c
@record.pluck(:id)
@record << @record.first
@record
conversation
c
user.join()
user.joins()
user
c
user
c
n
c
user.conversations
user.conversation
user.class
c
(sender.employee? && recipient.employer?)
(sender.employer? && recipient.employee?)
n
c
sender.employee? && recipient.employer?
(sender.employer? && recipient.employee?)
(sender.employer? && recipient.employee?
(sender.employer? && recipient.employee?) ||(sender.employee? && recipient.employer?)
(sender.employer? && recipient.employee?) ||
n
c
c7
json
c
valid_attributes
c
valid_attributes.as_json
c
valid_attributes.as_json
valid_attributes.as_josn
c
valid_attributes
c
valid_attributes
c
user.work_offers.first.elected.feedbacks.pluck(:work_offer_id)
user.work_offers.first.elected.given_feedbacks.size
user.work_offers.first.elected.feedbacks.size
user.work_offers.first.elected.feedbacks
user.work_offers.first.elected
user.work_offers.pluck(:id, :elected_id)
user.work_offers
user
c
u.feedbacks.pluck(:subject_id, :writer_id, :id)
u.feedbacks.pluck(:subject_id, :writer_id)
u.given_feedbacks.pluck(:subject_id, :writer_id)
u.received_feedbacks.pluck(:subject_id, :writer_id)
u.given_feedbacks.pluck(:subject_id, :writer_id)
u.received_feedbacks.pluck(:subject_id, :writer_id)
u.recived_feedbacks.pluck(:subject_id, :writer_id)
u.feedbacks.pluck(:subject_id, :writer_id)
u.given_feedbacks.size
u.given_feedbacks
u.feedbacks
w2 = u.work_offers.last
w1 = u.work_offers.first
u.work_offers.size
u.work_offers
u.employer
u = User.find(10354)
User.all.size
c
a
n
c
response.body 
c
continue
c
@work_offer
c
@work_offer
current_user.id
c
work_offer.id
@logged_user.id
c
current_user.work_offers
current_user.id
params[:id]
param[:id]
c
work_offer.to_param
work_offer.bidder_id
@logged_user.id
c
work_offer.as_json
work_offer.to_param
work_offer
c
json
c
valid_attributes
json
c
valid_attributes
c
valid_attributes
c
valid_attributes
c
valid_attributes
c
n
!bidder.employer?
bidder
c
errors
c
!bidder.employer?
bidder.employer?
bidder.employer
bidder
c
c+
self.elected
elected
self.bidder
self
c
n
c
@logged_user.id
@logged_user
c
n
c
feedback
n
c
@user.id
@record.writer_id
c
@record.writer_id
@user.id
create?
c
create?
Time.now - @record.created_at < 1.days
create? && Time.now - @record.created_at < 1.days
c
n
Time.now - @record.created_at < 1.days
@record
c
@record
c
Time.now - 2.days
2.days.to_now
2.days.from_now - @record.created_at < 1.days
2.days_from_now - @record.created_at < 1.days
Time.now+10 - @record.created_at < 1.days
1.days.from_now
1.days
Time.now+10 - @record.created_at
Time.now - @record.created_at
Time.now -@record.created_at
c
@record
params
c
valid_attributes
valid_attributes.delete('id')
valid_attributes.remove!('id')
c
valid_attributes.text
valid_attributes
feedback.attributes
feedback
