c
json
c
current_user.given_feedback.size
current_user.given_feedback
current_user
User.first
c
exception
n
c
response.body
c
f.created_at
f = Feedback.first
c
n
c
n
c
controller.stub!(:authorize).and_return(User)
controller.stub!(:authorize)
controller.stub!(:authenticate_user!)
controller.stub!(authenticate)
controller.stub!(authenticate_user!)
controller.stub
controller
c
controller
c
feedback.errors['rating']
feedback.errors['text']
feedback.errors['base']
feedback.errors[''base]
feedback.errors.base
feedback.errors
feedback
c
a.writer
a.subject
a
c
a.writer
a
c
build :feedback
c
build :feedback
c
build :feedback
c
build :feedback
c
build :feedback
c
build :feedback
c
build :feedback
c
build :feedback
c
build :feedback
c
build :feedback
c
build :feedback
c
json
c
json['errors']
json
c
valid_user[:email]
valid_user.email
valid_user
ActionMailer::Base.deliveries.last.to
ActionMailer::Base.deliveries.last
ActionMailer::Base.deliveries
c
ActionMailer::Base.deliveries.first.body
ActionMailer::Base.deliveries.first
ActionMailer::Base.deliveries
n
ActionMailer::Base.deliveries = []
ActionMailer::Base.deliveries
c
json[:email]
json['email']
json.email
json
expect(json.first[:email]).to eq user.email
json.first['email']
user.email
user
c
json
c
n
user.name
n
user.name
c
a['name']
a[:name]
a.class
a.name
a
a = JSON.parse response.body
JSON.pars response.body
response.body
json
n
c
n
c
n
json
n
c
valid_user
response.body
response.status
n
c
n
valid_user
user
n
user
valid_user
c
user
n
user
c
response.body
c
response.body
c
@error
c
@error
@error = 'pippo'
@error
@erro
c
@error
c
@error
c
e.message.split('?')[0]
e.message
e
e.presence
e.recived_message?
e.recived_message
e.message
e.policy
e.methods
e.inspect
e
e.query
c
@record
@user
user
c
User.find(params[:id])
User.all
c
current_user
c
current_user
c
current_user
c
attributes_for(:user)
continue
c
valid_user.password
valid_user
c
valid_user
c
user_params
c
user
c
user_params
user
user.email
user
c
response.body
c
response.body
c
response.body
c
response.body
c
params
c
params
c
valid_user
c
valid_user
c
valid_user
c
valid_user
c
params
c
 valid_user.to_json
j valid_user.to_json
valid_user.to_json
valid_user
c
params
c
params
c
json.first
json[1]
json
c
user.to_json
user.to_h
user.to_s
response.body
[user]
user
c
response.body
response
c
response.body
response
c
response.body
response
get :index, {}
c
a
c
response.status
response.body
response
c
get :index, {}, user.create_new_auth_token
n
c
current_user
user.create_new_auth_token
