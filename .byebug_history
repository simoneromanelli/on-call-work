c
user.work_offers.first.elected.feedbacks.pluck(:work_offer_id)
user.work_offers.first.elected.given_feedbacks.size
user.work_offers.first.elected.feedbacks.size
user.work_offers.first.elected.feedbacks
user.work_offers.first.elected
user.work_offers.pluck(:id, :elected_id)
user.work_offers
user
c
u.feedbacks.pluck(:subject_id, :writer_id, :id)
u.feedbacks.pluck(:subject_id, :writer_id)
u.given_feedbacks.pluck(:subject_id, :writer_id)
u.received_feedbacks.pluck(:subject_id, :writer_id)
u.given_feedbacks.pluck(:subject_id, :writer_id)
u.received_feedbacks.pluck(:subject_id, :writer_id)
u.recived_feedbacks.pluck(:subject_id, :writer_id)
u.feedbacks.pluck(:subject_id, :writer_id)
u.given_feedbacks.size
u.given_feedbacks
u.feedbacks
w2 = u.work_offers.last
w1 = u.work_offers.first
u.work_offers.size
u.work_offers
u.employer
u = User.find(10354)
User.all.size
c
a
n
c
response.body 
c
continue
c
@work_offer
c
@work_offer
current_user.id
c
work_offer.id
@logged_user.id
c
current_user.work_offers
current_user.id
params[:id]
param[:id]
c
work_offer.to_param
work_offer.bidder_id
@logged_user.id
c
work_offer.as_json
work_offer.to_param
work_offer
c
json
c
valid_attributes
json
c
valid_attributes
c
valid_attributes
c
valid_attributes
c
valid_attributes
c
n
!bidder.employer?
bidder
c
errors
c
!bidder.employer?
bidder.employer?
bidder.employer
bidder
c
c+
self.elected
elected
self.bidder
self
c
n
c
@logged_user.id
@logged_user
c
n
c
feedback
n
c
@user.id
@record.writer_id
c
@record.writer_id
@user.id
create?
c
create?
Time.now - @record.created_at < 1.days
create? && Time.now - @record.created_at < 1.days
c
n
Time.now - @record.created_at < 1.days
@record
c
@record
c
Time.now - 2.days
2.days.to_now
2.days.from_now - @record.created_at < 1.days
2.days_from_now - @record.created_at < 1.days
Time.now+10 - @record.created_at < 1.days
1.days.from_now
1.days
Time.now+10 - @record.created_at
Time.now - @record.created_at
Time.now -@record.created_at
c
@record
params
c
valid_attributes
valid_attributes.delete('id')
valid_attributes.remove!('id')
c
valid_attributes.text
valid_attributes
feedback.attributes
feedback
c
assigns(:feedback)
c
json
c
json
c
json
c
invalid_attributes
c
invalid_attributes
invalid_parameters
c
json
n
json
c
json
n
json
c
invalid_attributes
c
params
c
n
@feedback.errors
n
c
n
@feedback.save
authorize @feedback
n
c
@logged_user
valid_attributes
c
e.message.split('?').first
e.message.split('?')
e.message
e
c
@user.id
current_user
params
c
@record
c
json
c
current_user.id
current_user
feedback_params
feedback_param
c
given_feedback_params
c
params
c
current_user.id
params
c
given_feedback_params
params
c
time.new(json['given_feedbacks'].first['created_at']).strftime("%Y/%m/%d %H:%M:%S")
json['given_feedbacks'].first['created_at'].strftime("%Y/%m/%d %H:%M:%S")
json['given_feedbacks'].first['created_at']
json['given_feedbacks'].first.created_at
json['given_feedbacks'].first
json['given_feedbacks'].firat
json['given_feedbacks']
json.given_feedbacks
json
.strftime("%Y/%m/%d %H:%M:%S")
c
ActiveModel::ArraySerializer.new(given_feedbacks, each_serializer: FeedbackSerializer).as_json
ActiveModel::ArraySerializer.new(given_feedbacks, each_serializer: FeedbackSerializer).to_json
ActiveModel::ArraySerializer.new(Funding.all, each_serializer: FundingSerializer).to_json
 FeedbackSerializer.new(given_feedbacks.first, expand: true).serializable_hash
FeedbackSerializer.methods
FeedbackSerializer
 FeedbackSerializer.new(given_feedbacks, expand: true).serializable_hash
c
a.to_json
a = FeedbackSerializer.new @given_feedbacks
FeedbackSerializer.new @given_feedbacks
FeedbackSerializer
SerializableFeedback
SerializableResource
  end
    super.merge(time: time.strftime('%d.%m.%Y %H:%M:%S'))
def as_json(options = {})
c
given_feedbacks.class
given_feedbacks
c
SerializableResource.new(Feedback)
SerializableResource.new(Feedback, options)
c
SerializableResource.new(Feedback, options)
c
continue
SerializableResource.new(Feedback, options)
@given_feedbacks.to_json
@given_feedbacks.last
@given_feedbacks.size
@given_feedbacks
c
json
c
current_user.given_feedback.size
current_user.given_feedback
current_user
User.first
c
exception
n
c
